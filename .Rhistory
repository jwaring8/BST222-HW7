geom_histogram(color="black", fill="dodgerblue", alpha=0.7, center=0, binwidth = 0.03) +
labs(title="Distribution of Mean Roulette Earnings (n=250)", x="Mean Earnings per Spin", y="Frequency")
p31 <- ggplot() + aes(xbar_500) +
geom_histogram(color="black", fill="dodgerblue", alpha=0.7, center=0, binwidth = 0.025) +
labs(title="Distribution of Mean Roulette Earnings (n=500)", x="Mean Earnings per Spin", y="Frequency")
p41 <- ggplot() + aes(xbar_1000) +
geom_histogram(color="black", fill="dodgerblue", alpha=0.7, center=0, binwidth = 0.02) +
labs(title="Distribution of Mean Roulette Earnings (n=1000)", x="Mean Earnings per Spin", y="Frequency")
grid.arrange(p11, p21, p31, p41, ncol = 2)
n <- 1000
X <- sample(c(1,-1), n, replace = T, prob = c(9/19, 10/19))
S <- sum(X)
n <-100
mu <- n * ((9/19) - (10/19)) # expected value
print(mu)
se <- sqrt(n) * 2 * sqrt(90)/19 # standard error
print(se)
1 - pnorm(0, mu, se)
mean(S_100 >= 0)
mean(S_100 > 0)
mean(S_100 > 0)
mean(S_100 > 0)
mean(S_100 > 0)
mean(S_100 > 0)
mean(S_100 > 0)
mean(S_100 > 0)
mean(S_100 > 0)
mean(S_100 > 0)
mean(S_100 > 0)
mean(S_100 > 0)
compute_prob <- function(n) {
mu <- n * ((9/19) - (10/19))
se <- sqrt(n) * 2 * sqrt(90)/19
1 - pnorm(0, mu, se)
}
n <- 25:1000
probs <- compute_prob(n)
ggplot() + aes(n, probs) +
geom_line(size=1.2, color = "dodgerblue") +
labs(x = "Sample Size (n)", y = "Probability the Casino Loses Money")
series_outcome <- function(n, p) {
teams <- c("Red Sox", "Astros")
outcomes <- sample(ifelse(teams == "Red Sox", 1, -1), n, replace = T, prob = c(p, 1-p))
ifelse(sum(outcomes) > 0, "Red Sox", "Astros")
}
B <- 10000
outcomes <- table(replicate(B, series_outcome(5, 0.5)))
prop.table(outcomes)
1 - ppois(4, 3)
ppois(5, 3, lower.tail = F)
quit()
1 - ppois(4, lambda = 3)
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
exit
quit()
install.packages("~/R/fiftystater_1.0.1.tar.gz", repos = NULL, type = "source")
sampvar <- function(x) {
# Compute sum of vector x
my.sum <- function(x) {
sum <- 0
for (i in x) {
sum <- sum + i
}
sum
}
mu <- my.sum(x) / length(x)
sq <- my.sum((x - mu) ^ 2)
sq / (length(x) - 1)
}
# Profile sampvar()
x <- runif(1e7)
Rprof("Rprof-mem.out", memory.profiling=TRUE)
y <- sampvar(x)
Rprof(NULL)
summaryRprof("Rprof-mem.out", memory="both")
library("tidyverse", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
install.packages("lpSolve")
q()
install.packages("reticulate")
library(reticulate)
b <- 5
repl_python()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
load("elections_polls.RData")
repl_python()
exit
quit
q()
install.packages("Rccp")
install.packages("Rccp")
install.packages("Rccp", type="source")
install.packages("Rccp", dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages("Rccp")
install.packages("Rcpp")
library(Rcpp)
cppFunction('int add(int x, int y, int z) {
int sum = x + y + z;
return sum;
}')
# add works like a regular R function
add(1, 2, 3) #6
setwd("~/Harvard/Fall 2018/BST 222/Homework/Homework 7")
knitr::opts_chunk$set(echo = FALSE)
lambdas <- c(0.5, 1, 1.5, 2, 2.5, 3)
x <- 0:10
pdf <- lambdas * exp(-lambdas * x)
lambdas <- c(0.5, 1, 1.5, 2, 2.5, 3)
x <- 0:10
pdf <- lambdas[1] * exp(-lambdas[1] * x)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(tidyverse)
x <- 0:20
phat <- x / 20
qhat <- 1 - phat
waldx2 <- ((phat - 0.75)^2) / (phat * qhat / 20)
lrx2 <- 2 * log(((4 * phat / 3)^x) * (4 * qhat)^(20 - x))
scorex2 <- ((phat - 0.75)^2) / (0.75 * 0.25 / 20)
cumubinom <- pbinom(x, 20, p = 0.75) # less than or equal to x
binomtail <- pbinom(x - 1, 20,p = 0.75, lower.tail = FALSE) #greater or equal to x - Note that
# pbinom(x) = P(X > x)
cp20 <- data.frame(x,phat,qhat, waldx2, lrx2,scorex2,cumubinom,binomtail)
cp20
lambda <- c(0.5, 1, 1.5, 2, 2.5, 3)
x <- 0:10
pdf <- lambda * exp(-lambda * x)
pdfs <- data.frame(x, lambda, pdf)
lambda <- c(0.5, 1, 1.5, 2, 2.5, 3)
x <- 0:5
pdf <- lambda * exp(-lambda * x)
pdfs <- data.frame(x, lambda, pdf)
View(pdfs)
lambda <- c(0.5, 1, 1.5, 2, 2.5, 3)
x <- 0:10
pdf <- lambda * exp(-lambda * x)
pdfs <- apply(x, lambda, pdf)
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
lambdas <- c(0.5, 1, 1.5, 2, 2.5, 3)
pdfs <- mdply(lambdas, exponential, x = 0:10)
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
lambdas <- c(0.5, 1, 1.5, 2, 2.5, 3)
pdfs <- mdply(lambdas, exponential, x = 0:10)
View(pdfs)
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
lambdas <- c(0.5, 1, 1.5, 2, 2.5, 3)
pdfs <- mdply(lambdas, exponential, x = 0:10)
ggplot(pdfs, aes(x, value, color=factor(lambdas))) +
geom_line()
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2, 2.5, 3))
pdfs <- mdply(params, exponential, x = 0:10)
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_line()
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = 0:10)
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_line()
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = 0:5)
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_line()
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = 0:5)
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path()
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,5, length=200))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path()
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,5, length=300))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path()
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,5, length=300))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
labs(y="f(x; $\lambda$")
library(ggplot2)
library(plyr)
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,5, length=300))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
labs(y="f(x; lambda")
library(ggplot2)
library(plyr)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,5, length=300))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
labs(y="f(x; lambda", title
library(ggplot2)
library(plyr)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,5, length=300))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
labs(y="f(x; lambda", title = "Exponential PDF")
library(ggplot2)
library(plyr)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
labs(y="f(x; lambda", title = "Exponential PDF")
library(ggplot2)
library(plyr)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab() +
title("Exponential PDF")
library(ggplot2)
library(plyr)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab("y") +
title("Exponential PDF")
library(ggplot2)
library(plyr)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab("y") +
labs(title = "Exponential PDF")
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab(TeX("$f(x; \lambda)$")) +
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab(TeX("$f(x; \\lambda)$")) +
labs(title = "Exponential PDF")
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab(TeX("$f(x; \\lambda) = \\lambda e^{-\\lambda x} $")) +
labs(title = "Exponential PDF")
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color="Lambda"))) +
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab(TeX("$f(x; \\lambda) = \\lambda e^{-\\lambda x} $")) +
labs(title = "Exponential PDF")
??labs
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab(TeX("$f(x; \\lambda) = \\lambda e^{-\\lambda x} $")) +
labs(title = "Exponential PDF", color="Lambda")
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab(TeX("$f(x; \\lambda) = \\lambda e^{-\\lambda x} $")) +
labs(title = "Exponential PDF", color=Tex("\\lambda"))
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab(TeX("$f(x; \\lambda) = \\lambda e^{-\\lambda x} $")) +
labs(title = "Exponential PDF", color=Tex("$\\lambda$"))
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab(TeX("$f(x; \\lambda) = \\lambda e^{-\\lambda x} $")) +
labs(title = "Exponential PDF", color=TeX("$\\lambda$"))
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab(TeX("$f(x; \\lambda) = \\lambda e^{-\\lambda x} $")) +
labs(color=TeX("$\\lambda$"))
knitr::opts_chunk$set(echo = FALSE)
n <- 100
lambdas <- seq(0.1, 2.0, 0.05)
MLE_MSE <- (lambdas^2/n) + (lambdas/(n-1))^2
MSEs <- data.frame(lambdas,MLE_MSE)
p7 <- ggplot(MSEs) +
geom_line(aes(lambdas, MLE_MSE,), color="dodgerblue") +
labs(x=TeX("$\\lambda$"), y="MSE", title="Compare MSE (n=100)")
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(plyr)
library(latex2exp)
theme_set(theme_bw())
exponential <- function(lambda, x) {
data.frame(x = x, value = lambda * exp(-lambda * x))
}
params <- expand.grid(lambda = c(0.5, 1, 1.5, 2))
pdfs <- mdply(params, exponential, x = seq(0,4, length=250))
ggplot(pdfs, aes(x, value, color=factor(lambda))) +
geom_path() +
ylab(TeX("$f(x; \\lambda) = \\lambda e^{-\\lambda x} $")) +
labs(color=TeX("$\\lambda$"))
library(gridExtra)
n <- c(10, 100, 1000, 10000)
lambda <- 1.2
num_sims <- 1000
MLEs <- matrix(data = NA, length(n), num_sims)
for (i in 1:length(n)){
for (j in 1:num_sims) {
MLEs[[i,j]] <- 1/mean(rexp(n[i], lambda))
}
}
MLEs <- data.frame(t(MLEs))
p1<- ggplot(data=MLEs, aes(x=X1)) +
geom_histogram(color="black", fill="dodgerblue", alpha = 0.7, bins=15) +
labs(title="Distribuion of MLEs for n=10", x=TeX("$\\hat{\\lambda}_{MLE}"), y="Frequency")
p2<- ggplot(data=MLEs, aes(x=X2)) +
geom_histogram(color="black", fill="dodgerblue", alpha = 0.7, bins=15) +
labs(title="Distribuion of MLEs for n=100", x=TeX("$\\hat{\\lambda}_{MLE}"), y="Frequency")
p3<- ggplot(data=MLEs, aes(x=X3)) +
geom_histogram(color="black", fill="dodgerblue", alpha = 0.7, bins=15) +
labs(title="Distribuion of MLEs for n=1000", x=TeX("$\\hat{\\lambda}_{MLE}"), y="Frequency")
p4<- ggplot(data=MLEs, aes(x=X4)) +
geom_histogram(color="black", fill="dodgerblue", alpha = 0.7, bins=15) +
labs(title="Distribuion of MLEs for n=10000", x=TeX("$\\hat{\\lambda}_{MLE}"), y="Frequency")
grid.arrange(p1,p2,p3,p4, ncol=2)
n <- 100
lambdas <- seq(0.1, 2.0, 0.05)
MLE_MSE <- (lambdas^2/n) + (lambdas/(n-1))^2
MSEs <- data.frame(lambdas,MLE_MSE)
p7 <- ggplot(MSEs) +
geom_line(aes(lambdas, MLE_MSE,), color="dodgerblue") +
labs(x=TeX("$\\lambda$"), y="MSE", title="Compare MSE (n=100)")
n <- 1000
MLE_MSE <- (lambdas^2/n) + (lambdas/(n-1))^2
MSEs2 <- data.frame(lambdas,MLE_MSE)
p8 <- ggplot(MSEs2) +
geom_line(aes(lambdas, MLE_MSE,), color="dodgerblue") +
ylim(0,0.02) +
labs(x=TeX("$\\lambda$"), y="MSE", title="Compare MSE (n=1000)")
grid.arrange(p7,p8,ncol=2)
n <- 100
lambdas <- seq(0.1, 2.0, 0.05)
MLE_MSE <- (lambdas^2/n) + (lambdas/(n-1))^2
MSEs <- data.frame(lambdas,MLE_MSE)
p7 <- ggplot(MSEs) +
geom_line(aes(lambdas, MLE_MSE,), color="dodgerblue") +
labs(x=TeX("$\\lambda$"), y="MSE", title="Compare MSE (n=100)")
n <- 1000
MLE_MSE <- (lambdas^2/n) + (lambdas/(n-1))^2
MSEs2 <- data.frame(lambdas,MLE_MSE)
p8 <- ggplot(MSEs2) +
geom_line(aes(lambdas, MLE_MSE,), color="dodgerblue") +
ylim(0,0.04) +
labs(x=TeX("$\\lambda$"), y="MSE", title="Compare MSE (n=1000)")
grid.arrange(p7,p8,ncol=2)
